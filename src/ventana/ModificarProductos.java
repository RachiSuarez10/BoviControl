/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ventana;

import conectar.Conexion;
import java.awt.Color;
import java.sql.*;
import javax.swing.JOptionPane;

/**
 *
 * @author suare
 */
public class ModificarProductos extends javax.swing.JPanel {

    /**
     * Creates new form ModificarProductos
     */
    Color color2 = new Color(0, 148, 104);
    String id;

    public ModificarProductos() {
        initComponents();
        setSize(920, 440);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txt_cod_barras = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txt_descripcion = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txt_precio = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txt_cantidad = new javax.swing.JTextField();
        btnGuardar = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Roboto Black", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 148, 104));
        jLabel1.setText("Modificar producto");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 450, 80));

        jLabel3.setFont(new java.awt.Font("Franklin Gothic Book", 0, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel3.setText("Código de barras");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, 110, -1));

        txt_cod_barras.setFont(new java.awt.Font("Franklin Gothic Book", 0, 14)); // NOI18N
        jPanel1.add(txt_cod_barras, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 90, 240, 30));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/icons8_search_24px.png"))); // NOI18N
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 90, 30, 30));

        jLabel4.setFont(new java.awt.Font("Franklin Gothic Book", 0, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel4.setText("Descripción ");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, 110, -1));

        txt_descripcion.setFont(new java.awt.Font("Franklin Gothic Book", 0, 14)); // NOI18N
        jPanel1.add(txt_descripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 140, 240, 25));

        jLabel2.setFont(new java.awt.Font("Franklin Gothic Book", 0, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel2.setText("Precio");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, 110, -1));

        txt_precio.setFont(new java.awt.Font("Franklin Gothic Book", 0, 14)); // NOI18N
        jPanel1.add(txt_precio, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 180, 90, 25));

        jLabel7.setFont(new java.awt.Font("Franklin Gothic Book", 0, 14)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel7.setText("Cantidad");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, 130, -1));

        txt_cantidad.setFont(new java.awt.Font("Franklin Gothic Book", 0, 14)); // NOI18N
        jPanel1.add(txt_cantidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 220, 90, 25));

        btnGuardar.setFont(new java.awt.Font("Roboto Medium", 0, 12)); // NOI18N
        btnGuardar.setForeground(new java.awt.Color(255, 255, 255));
        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/boton login.png"))); // NOI18N
        btnGuardar.setText("Actualizar");
        btnGuardar.setBorder(null);
        btnGuardar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnGuardar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/boton login transparente.png"))); // NOI18N
        btnGuardar.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/boton login.png"))); // NOI18N
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        jPanel1.add(btnGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 270, 150, -1));

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 920, 440));
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked

        String codbarra = txt_cod_barras.getText();

        if (!codbarra.equals("")) {
            try {

                Connection cn = Conexion.conectar();
                PreparedStatement pst = cn.prepareStatement(
                        "select idalmacen,nombre_prod,precio_prod,cantidad_prod from almacen where idalmacen ='" + codbarra + "'");

                ResultSet rs = pst.executeQuery();

                if (rs.next()) {
                    id = rs.getString("idalmacen");

                    txt_descripcion.setText(rs.getString("nombre_prod"));
                    txt_precio.setText(rs.getString("precio_prod"));
                    txt_cantidad.setText(rs.getString("cantidad_prod"));

                    cn.close();

                } else {

                    JOptionPane.showMessageDialog(null, "No existe el produscto");
                }

            } catch (SQLException e) {

                System.err.println("Error al consultar producto " + e);
                JOptionPane.showMessageDialog(null, "Ocurrio un error al buscar producto");
            }
        } else {
            txt_cod_barras.setBackground(color2);
            JOptionPane.showMessageDialog(null, "Debe ingresar el codigo de barras");
            txt_cod_barras.setBackground(Color.WHITE);
        }
    }//GEN-LAST:event_jLabel5MouseClicked

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        //boton giuardar
        //recuperar datos
        String descripcion, cod_barras, cantidad, precio;

        int bandera = 0;

        cod_barras = txt_cod_barras.getText();
        descripcion = txt_descripcion.getText();
        precio = txt_precio.getText();
        cantidad = txt_cantidad.getText();

        //validar casillas acias
        if (descripcion.equals("")) {
            txt_descripcion.setBackground(color2);
            bandera++;
        }

        if (cod_barras.equals("")) {
            txt_cod_barras.setBackground(color2);
            bandera++;
        }

        if (cantidad.equals("")) {
            txt_cantidad.setBackground(color2);
            bandera++;
        }

        if (precio.equals("")) {
            txt_precio.setBackground(color2);
            bandera++;
        }

        if (bandera == 0) {
            try {
                String barra = txt_cod_barras.getText();

                Connection cn1 = Conexion.conectar();
                PreparedStatement pst1 = cn1.prepareStatement(
                        "select idalmacen from almacen where idalmacen ='" + barra + "' and not idalmacen ='" + id + "'");

                ResultSet rs1 = pst1.executeQuery();

                if (rs1.next()) {

                    JOptionPane.showMessageDialog(null, "Codigo de barra en existencia");
                    cn1.close();

                } else {

                    //conectar a la base de datos
                    try {

                        //Double s = Double.parseDouble(txt_precio.getText());
                        String fe = txt_cod_barras.getText();
                        Connection cn = Conexion.conectar();
                        PreparedStatement pst = cn.prepareStatement(
                                "update almacen set idalmacen=?, nombre_prod=?, precio_prod=?,cantidad_prod=? where idalmacen='" + id + "'");

                        pst.setString(1, fe);
                        pst.setString(2, txt_descripcion.getText());
                        pst.setDouble(3, Double.parseDouble(txt_precio.getText()));
                        pst.setInt(4, Integer.parseInt(txt_cantidad.getText()));

                        pst.executeUpdate();
                        cn.close();

                        txt_cod_barras.setText("");
                        txt_cantidad.setText("");
                        txt_descripcion.setText("");
                        txt_precio.setText("");

                        JOptionPane.showMessageDialog(null, "producto actualizado correctamente");

                    } catch (SQLException e) {
                        JOptionPane.showMessageDialog(null, "Error al guardar prducto nuevo");
                        System.err.println("Error al altualizar producto " + e);
                    }
                }
            } catch (SQLException e) {

                JOptionPane.showMessageDialog(null, "Error al buscar id");
                System.err.println("error al comparar cod de barras " + e);
            }

        } else {

            JOptionPane.showMessageDialog(null, "Debe de llenr todo los datos");
            System.err.println("No lleno todo los datos ");
            txt_cantidad.setBackground(Color.WHITE);
            txt_cod_barras.setBackground(Color.WHITE);
            txt_descripcion.setBackground(Color.WHITE);
            txt_precio.setBackground(Color.WHITE);
        }
    }//GEN-LAST:event_btnGuardarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGuardar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txt_cantidad;
    private javax.swing.JTextField txt_cod_barras;
    private javax.swing.JTextField txt_descripcion;
    private javax.swing.JTextField txt_precio;
    // End of variables declaration//GEN-END:variables
}
